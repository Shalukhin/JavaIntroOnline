5. Туристические путевки. Сформировать набор предложений клиенту по выбору туристической путевки 
различного типа (отдых, экскурсии, лечение, шопинг, круиз и т. д.) для оптимального выбора. Учитывать 
возможность выбора транспорта, питания и числа дней. Реализовать выбор и сортировку путевок.

Данное приложение представляет собой набор классов, размещённых в четырёх пакетах: beans, logic, view, main.
	- beans: размещены классы сущностей с которыми работает приложение
 		- класс TravelAgency: логически основной класс приложения, он хранит в себе массив всех актуальных 
 		  туров "Tour[] all_tours" и массив всех оформленных клиентских заказов "Order[] all_orders"
 		- пакет "tours": содержит набор классов относящихся к сущности "тур" и её разновидностей
 			- абстрактный класс "Tour": описывает общие свойства сущности "тур" (тип тура "String type"; 
 			  id тура "String id", продолжительность тура "int days"; вид транспорта "String transportation"; 
 			  наличие питания "boolean food"; цена тура "int price") и общее поведение (получить информацию 
 			  специфическую для конкретого тура "String receiveSpecificInfo()")
			- класс "Cruise": описывает подтип тура - "круиз", содержит поле "String[] all_countries" - 
			  массив в котором перечислены все страны(города), посещаемые в рамках данного круиза.
 			- класс "Excursion": описывает подтип тура - "экскурсия", содержит поля "String country" - 
 			  страна проведения экскурсии и "String guide_language" - язык на котором проводитя экскурсия.
 			- класс "Recovery": описывает подтип тура - "лечение", содержит поле "String illness" - 
 			  болезнь при которой показан данный тур.
 			- класс "Relaxation": описывает подтип тура - "отдых", содержит поле "String country" - 
 			  страна пребывания во время отдыха.
 			- класс "Shopping": описывает подтип тура - "шопинг", содержит поля "String city" - город 
 			  проведения шопига; "String shop" - магазин в котором будет проходить шопинг.
 		- класс "Client": описывает сущность "клиент" ("String name" - имя клиента; "String id" - id клиента).
 		- класс "Order": описывает сущность "заказ" - хранит в себе объект "Client client" - тот клиент, 
 		  который совершил этот заказ и массив обьектов типа Tour - "Tour[] tours" - все те туры, что заказал клиент.
 	
 	- logic: в данном пакете размещены классы с логикой, т.е. с основными действиями, которые можно 
 	  совершать над сущостями:
 		- класс "TravelAgencyLogic": описывает действия, которые можно совершать в турагентстве; содержит поле 
 		  "TravelAgency agency" - экземпляр класса "TravelAgency" с которым будут проводится описываемые действия:
 			- void loadStandartListOfTours() - заполнить массив актуальных туров у турагентства "agency" 
 			  стандартным перечнем из 5 туров.
 			- boolean bookTour(Client client, Tour tour) - бронирование тура "tour" клиентом "client". 
 			  Результатом данного действия становится добавление нового заказа в массив всех заказов 
 			  агентства "agency" (метод возврвщает true), либо редактирование существующего заказа 
 			  если клиент с данным id уже есть в базе заказов (метод возврвщает true), либо ничего 
 			  не происходит если клиент с таким id уже есть и у него в заказах есть тур с таким id 
 			  (метод возврвщает false).
 			- void sortToursByPrice() - сортирует массив всех актуальных туров турагентства "agency" 
 			  по возростанию цены.
 			- void sortToursByDayCount() - сортирует массив всех актуальных туров турагентства 
 			  "agency" по возростанию продолжительности тура.
 			- Tour[] qSort(Tour[] tours, Comparator<Tour> comparator) - рекурсивный приватный метод, 
 			  непосредственно обеспечивающий механизм сортировки массива (методом "быстрая сорртировка"); 
 			  принемает на входе массив который необходимо отсортировать и объект Comparator, в котором 
 			  заложена логика сравнения экземпляров Tour.
 			- Tour[] composite(Tour[] one, Tour mid, Tour[] two) - приватный метод, необходимый 
 			  для работы метода qSort.
 	- view: в данном пакете размещены классы отвечающие за вывод и отображение информации:
 		- класс "Viewer": содержит методы для вывода информации на консоль:
 			- void printAllOrdersInTravelAgencyToConsol(TravelAgency agency) - выводит на косоль все 
 			  оформленные клиентские заказы турагентства "agency"
 			- void printAllToursInTravelAgencyToConsol(TravelAgency agency) - выводитна консоль все 
 			  актуальные туры турагентства "agency"
 	- main: в данном пакете находится класс с точкой входа:
 		- класс "Runner": содержит метод main и создан для демонстрации работы приложения. Создаём экземпляр 
 		  класса TravelAgency - "agency"; создаём экземпляр класса TravelAgencyLogic - "agencyLogic" на основе 
 		  объекта "agency"; массив актуальных туров турагентства "agency" заполняем стандартным перечнем из 5 туров; 
 		  выводим на консоль перечень этих туров; сортируем массив актуальных туров турагентства "agency"
 		  по возростанию цены; снова выводим на консоль перечень этих туров; сортируем массив актуальных 
 		  туров турагентства "agency" по возростанию продолжительности тура; снова выводим на консоль перечень 
 		  тих туров; создаём трёх новых клиентов; бронируем каждым клиентом определённые туры; 
 		  выводим на консоль перечень всех созданых заказов от клиентов.
 		 
 		 
 		 
 		 
 		 
 		 
 			