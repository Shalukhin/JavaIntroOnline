Задача 1.  
Создать объект класса Текстовый файл, используя классы Файл, Директория. Методы: создать, переименовать, 
вывести на консоль содержимое, дополнить, удалить.

Описание приложения:
Существует класс "NotePad", который хранит в себе массив текстовых файлов - экзепляров класса 
"TextFile" (поле "TextFile[] archiveTextFiles"). Для осуществления каких-либо манипуляций над этим массивом
текстовых файлов, существует класс "NotePadLogic" - в нём описаны методы для создания новых текстовых 
файлов, поиска среди существующих текстовых файлов и удаления текстовых файлов.
Класс "TextFile" расширяет класс "File" и описывает сущность "текстовый файл", имеет поле "String text" 
где хранится непосредственно текстовое содержимое файла. Для проведения неких манипуляций с текстовыми файлами 
(экземплярами класса "TextFile") существует класс "TextFileLogic", который содержит методы для переименования
текстовых файлов и добавления нового текста к содержимому текстового файла.

Описание пакетов и классов:
	- пакет "beans": в нём размещены классы сущностей с которыми работает приложение:
		- абстрактый класс "File": описывает общие свойстава сущности "класс", содержит поле "String name" - 
		  имя файла и "Directory directory" - экземпляр класса "Directory" содержащий информацию о директории
		  файла.
		- класс "Directory": содержит директорию в текстовом виде - поле "String dir".
		- класс "TextFile": описывает сущность "текстовый файл", имеет поле "String text" для хранения
		  текстового содержимого.
		- класс "NotePad": описывает хранилище текстовых файлов, содержит поле "TextFile[] archiveTextFiles"
		  для хранения массива текстовых файлов.
	- пакет "logic": в данном пакете размещены классы с логикой, т.е. с основными действиями, которые можно 
 	  совершать над сущостями:
 		- класс "TextFileLogic": описывает действия, которые можно совершать с текстовым файлом:
 			- boolean renameTextFile(TextFile textFile, String newName) - метод меняет имя входящего
 			  файла "textFile" на новое имя "newName". В случае успешного переименования возвращает "true",
 			  в случае неудачи - false.
 			- boolean renameTextFile(TextFile textFile, String newName, String newDir) - метод меняет
 			  имя и директорию входящего файла "textFile" на новое имя "newName" и новую директорию "newDir".
 			  В случае успешного переименования возращает "true", в случае неудачи - false.
 			- boolean addTextToTextFile(TextFile textFile, String text) - добавляет текст "text" к содержимому 
 			  входящего файла "textFile".
 		- класс "NotePadLogic": описывает действия, которые можно совершать с экземпляром класса "NotePad".
 		  Имеет поле "NotePad notePad" где хранится экземпляр класса "NotePad" над которым совершаются
 		  описываемые действия:
 			- boolean createNewTextFile(String name, Directory directory) - метод создаёт новый экземпляр класса
 			  "TextFile" с именем "name" и директорией "directory" и помещает его в массив текстовых файлов
 			  "archiveTextFiles" объекта "notePad".
 			- TextFile[] findTextFilesByName(String name) - метод возвращает из массива "archiveTextFiles"
 			  объекта "notePad" массив текстовых файлов с одинаковым именем "name" но находящихся 
 			  в разных директориях.
 			- TextFile[] findAllTextFilesInDerectory(String dir) - метод возвращаетиз массива "archiveTextFiles"
 			  объекта "notePad" массив текстовых файлов находящихся в одной директории "dir".
 			- TextFile findTextFileByNameInDerectory(String name, String dir) - возвращает из массива 
 			  "archiveTextFiles" объекта "notePad" текстовый файл с именем "name" из директории "dir". 
 			  Если такого файла нет - возвращает null.
 			- boolean deleteTextFile(TextFile textFile) - метод удаляет входящий текстовый файл "textFile" 
 			  из массива "archiveTextFiles" объекта "notePad".
 			- boolean deleteTextFileByNameInDerectory(String name, String dir) - метод удаляет текстовый 
 			  файл с именем "name" в директории "dir" из массива "archiveTextFiles" объекта "notePad".
	- пакет "view": в данном пакете размещены классы отвечающие за вывод и отображение информации:
		- класс "Viewer": содержит методы для вывода информации на консоль:
			- static void printToConsoleAllTextFilesFromNotePad(NotePad notePad) - выводит на консоль перечеь 
			  всех текстовых файлов содержащихся во входящем объекте "notePad".
			- static void printToConsoleContentOfTextFile(TextFile textFile) -  выводит на консоль содержимое
			  вхдящего текстового файла "textFile".
	- пакет "main": в данном пакете находится класс с точкой входа:
		- класс "Runner": содержит метод main и создан для демонстрации работы приложения. Создаём экземпляр 
		  класса "NotePad" - "note"; на основе него создаём экземпляр класса "NotePadLogic" - "noteLogic"; 
		  создаём три новых текстовых файла, которые помещаются в массив "archiveTextFiles" объекта "note";
		  выводим на экран перечень всех текстовых файлов в массиве "archiveTextFiles" объекта "note";
		  создаём ссылку "txt" на текстовый файл с именем "prog1" в директории "C:/1"; добавляем к содержимому
		  "txt" некий текст; печатаем на консоль содержимое файла "txt"; переименовываем файл "txt";
		  выводим на экран перечень всех текстовых файлов в массиве "archiveTextFiles" объекта "note";
		  удаляем из массива "archiveTextFiles" объекта "note" текстовый файл с именем "prog2" в директории
		  "C:/1"; выводим на экран перечень всех текстовых файлов в массиве "archiveTextFiles" объекта "note".
 			
 			
	
	
	
	
	
	
	
	
Класс "Viewer" создан для отображения некой информации об объектах, например, на консоли.
Класс "Runner"